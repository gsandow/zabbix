#!/bin/bash
##################################
# Zabbix monitoring script
#
# redis:
#  - anything available via redis stub-status module
#
##################################
# Contact:
#  vincent.viallet@gmail.com
##################################
# ChangeLog:
#  20100922     VV      initial creation
##################################

# Zabbix requested parameter
ZBX_REQ_DATA="$1"
ZBX_REQ_DATA_URL="$2"

# Nginx defaults
NGINX_STATUS_DEFAULT_URL="http://localhost/nginx_status"
REDIS_CLI_BIN="/usr/local/redis/redis-<%= redis_role %>/bin/redis-cli"

#
# Error handling:
#  - need to be displayable in Zabbix (avoid NOT_SUPPORTED)
#  - items need to be of type "float" (allow negative + float)
#
ERROR_NO_ACCESS_FILE="-0.9900"
ERROR_NO_ACCESS="-0.9901"
ERROR_WRONG_PARAM="-0.9902"
ERROR_DATA="-0.9903" # either can not connect / bad host / bad port

REDIS_PORT=<%= redis_port %>

# save the redis info in a variable for future parsing
REDIS_STATS=$($REDIS_CLI_BIN -p $REDIS_PORT info 2> /dev/null)

# error during retrieve
if [ $? -ne 0 -o -z "$REDIS_STATS" ]; then
  echo $ERROR_DATA
  exit 1
fi

#
# Extract data from redis info
#
case $ZBX_REQ_DATA in
  alive)
    REDIS_STATS=$($REDIS_CLI_BIN -p $REDIS_PORT ping 2>/dev/null)
    if [ "$REDIS_STATS" == "PONG" ]; then
      echo "1"
    else
      echo "0"
    fi
    ;;
  slowlog_len)
    REDIS_STATS=$($REDIS_CLI_BIN -p $REDIS_PORT slowlog len 2>/dev/null)
    echo "$REDIS_STATS"
    ;;
  connected_clients)               echo "$REDIS_STATS" | grep "connected_clients:" | awk -F : '{print $2}';;
  used_memory)                     echo "$REDIS_STATS" | grep "used_memory:" | awk -F : '{print $2}';;
  used_memory_peak)                echo "$REDIS_STATS" | grep "used_memory_peak:" | awk -F : '{print $2}';;
  latest_fork_usec)                echo "$REDIS_STATS" | grep "latest_fork_usec:" | awk -F : '{print $2}';;
  total_connections_received)      echo "$REDIS_STATS" | grep "total_connections_received:" | awk -F : '{print $2}';;
  total_commands_processed)        echo "$REDIS_STATS" | grep "total_commands_processed" | awk -F : '{print $2}';;
  role)                            echo "$REDIS_STATS" | grep "role:" | awk -F : '{print $2}';;
  keys)                            echo "$REDIS_STATS" | grep "keys=" | awk -F : '{print $2}' | awk -F = '{print $2}' | awk -F , '{print $1}';;
  *)                               echo $ERROR_WRONG_PARAM; exit 1;;
esac

exit 0
